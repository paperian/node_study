mongodb는 nosql
mongodb는 nosql
mongodb는 nosql

1. 데이터 베이스는 여러개의 컬렉션을 갖는다.

2. 각 컬렉션은 데이터가 기록된 JSON 문서를 갖는다!

sudo apt-get install mongodb 로 설치하며

mongo 명령어로 셸을 실행시키고

'db'
'db'
'db'라는 데이터베이스 객체를 제공한다.

db라고 입력해보면 현재 어떤 데이터베이스에 있는지 확인 가능

use node
use node
use node  라고 입력함으로써 node 라는 db생성 후, db객체가 변경됨


db.createCollection(name); 으로 콜렉션을 생성한다 (table)
db.createCollection(name); 으로 콜렉션을 생성한다
db.createCollection(name); 으로 콜렉션을 생성한다


데이터를 저장할 땐
데이터를 저장할 땐
데이터를 저장할 땐

db.collection_name.save({object})

db.products.save({name:'pencil', price: 500})

형식으로 저장한다. 단순히 JSON형식으로 문서에 데이터를 저장하는 것이다.

데이터 조회는
데이터 조회는
데이터 조회는

db.collection_name.find()

속성을 제외 시키고 싶으면 (projection) , true를 써버리면 그 속성만 나옴 (id는 무조건 출력되서 원하지 않으면 false로 지정해야)

db.colleciton_name.find({}, {_id:false})

이런식으로 두번째 매개변수에 속성을 지정 후 boolean 값을 부여한다

첫번째 매개변수는 query(조건)이다.

db.products.find({price:500}, {_id:false})
db.products.find({price: {$gt: 500}}, {_id:false})

이런식으로 써먹는다.

하나의 객체만 추출할 때는 findOne() 메서드를 쓴다 (find()의 첫번째 데이터만 출력)

데이터를 정렬할 땐
데이터를 정렬할 땐
데이터를 정렬할 땐

db.products.find({ price: 500 },{ _id: flase }).sort({ name:1 })

이런식으로 정렬 기준 속성 이름과 숫자를 전달한다. '-1'을 전달하면 내림차순 정렬이다


특정 데이터를 선택할 때
특정 데이터를 선택할 때
특정 데이터를 선택할 때

db.products.find().sort({price:1}).limit(3)
db.products.find().sort({price:1}).skip(3).limit(3)


데이터 수정할 땐
데이터 수정할 땐
데이터 수정할 땐

var temp = db.products.findOne({name: 'knife'})
temp.price = 700
db.products.save(temp)

혹은

db.collection.update(
	<query>,
	<update>,
	{
		upsert: boolean,					// update + insert 사용 여부
		multi: boolean,						// 바꿔야 할 대상이 하나 이상일 때 하나만 바꿀지, 전부 바꿀지
		writeConcern: document		// 데이터 업데이트할 때 필요한 설정값 지정
	}
)

ex)
db.products.update({name:'knife'}, {$set: {price:500}}, {upsert: false, multi: true})

$set 연산자는 다른 속성은 그대로 유지하고 특정 속성만 병견할 수 있게 해줌
만약 $set을 쓰지 않으면 새로운 객체로 대체가 되니 조심!


데이터 삭제할 땐
데이터 삭제할 땐
데이터 삭제할 땐

db.products.remove({name: 'jein'});

전부 삭제할 땐 (큰일 날 수)

db.products.remove()

