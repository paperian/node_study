기존의 웹 서버는 대부분 스레드를 기반으로하는 동기 방식으로 네트워크 입출력을 처리

Node.js 는 이벤트를 기반으로 하는 비동기 방식으로 네트워크 입출력을 처리(대규모 네트워크 애플리케이션에 적합)



동기 방식은
작업 요청이 들어올 때마다 스레드를 여러 개 만들어 동시에 일을 처리
(일이 많아질 수록 스레드를 더 많이 만들어야 해서, 메모리 사용량이 계속 증가)
몸을 복제해

비동기 방식
처음에는 각 가게를 돌면서 대기표를 받고 대기 번호를 부를 때까지 기다림
대기번호를 부르는 순간 물건을 받아오면 됨
스레드를 하나만 생성하므로 몸은 하나임, 하지만 이벤트를 사용하므로 빠른 속도로 일을 처리?

일이 아무리 많아도 몸은 하나이므로 메모리 사용량 같은 시스템 리소스 사용량은 변화가 거의 x
그러나 하나 뻗으면 프로그램 전체 문제발생

(사실, Node.js 도 내부적으로는 여러 개의 스레드가 스레드 풀로 동작(4개),
또한 실제 웹 서버를 운용할 때는 코어를 분산해서 관리하므로, 하나의 스레드를 사용한다고 볼 수는 없음.
중요한건 플랫폼(Node.js)가 여러 스레드를 알아서 효율적으로 운용함. 개발자는 하나를 쓰듯이 쓰면댐)
